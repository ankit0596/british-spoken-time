plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

sourceSets {
	intTest {
		java.srcDir file('src/intTest/java')
		resources.srcDir file('src/intTest/resources')
		compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
		runtimeClasspath += output + compileClasspath
	}
}

configurations {
	intTestImplementation.extendsFrom testImplementation
	intTestRuntimeOnly.extendsFrom testRuntimeOnly
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	intTestImplementation 'org.springframework.boot:spring-boot-starter-test'
	intTestRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.register('intTest', Test) {
	description = 'Runs integration tests.'
	group = 'verification'
	testClassesDirs = sourceSets.intTest.output.classesDirs
	classpath = sourceSets.intTest.runtimeClasspath
	shouldRunAfter test
	useJUnitPlatform()
}

tasks.named('test') {
	useJUnitPlatform()
}
